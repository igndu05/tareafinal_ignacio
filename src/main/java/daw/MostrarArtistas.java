/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package daw;

import controladores.ArtistaController;
import entidades.Artista;
import entidades.Disco;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ignacio
 */
public class MostrarArtistas extends javax.swing.JFrame {

    private ArtistaController artistaController = new ArtistaController();

    /**
     * Creates new form MostrarArtistas
     */
    public MostrarArtistas() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        cargarArtistasEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CrearArtista = new javax.swing.JButton();
        BorrarArtista = new javax.swing.JButton();
        ActualizarArtista = new javax.swing.JButton();
        Volver = new javax.swing.JButton();
        TextoTitulo = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 700, 410));

        CrearArtista.setBackground(new java.awt.Color(255, 255, 255));
        CrearArtista.setForeground(new java.awt.Color(0, 0, 0));
        CrearArtista.setText("Crear Artista");
        CrearArtista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearArtistaActionPerformed(evt);
            }
        });
        getContentPane().add(CrearArtista, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 140, 190, 50));

        BorrarArtista.setBackground(new java.awt.Color(255, 255, 255));
        BorrarArtista.setForeground(new java.awt.Color(0, 0, 0));
        BorrarArtista.setText("Borrar Artista");
        BorrarArtista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarArtistaActionPerformed(evt);
            }
        });
        getContentPane().add(BorrarArtista, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, 190, 50));

        ActualizarArtista.setBackground(new java.awt.Color(255, 255, 255));
        ActualizarArtista.setForeground(new java.awt.Color(0, 0, 0));
        ActualizarArtista.setText("Actualizar Artista");
        ActualizarArtista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarArtistaActionPerformed(evt);
            }
        });
        getContentPane().add(ActualizarArtista, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, 190, 50));

        Volver.setBackground(new java.awt.Color(255, 255, 255));
        Volver.setForeground(new java.awt.Color(0, 0, 0));
        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });
        getContentPane().add(Volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 440, 190, 50));

        TextoTitulo.setFont(new java.awt.Font("Fira Sans Condensed ExtraBold", 1, 24)); // NOI18N
        TextoTitulo.setForeground(new java.awt.Color(255, 255, 255));
        TextoTitulo.setText("Listado de Artistas");
        getContentPane().add(TextoTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 290, 60));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FondoVarios.png"))); // NOI18N
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CrearArtistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearArtistaActionPerformed

        String nombre = JOptionPane.showInputDialog(this, "Nombre del artista:");
        if (nombre == null || nombre.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nombre no puede estar vacío.");
            return;
        }

        String fechaStr = JOptionPane.showInputDialog(this, "Fecha de nacimiento (YYYY-MM-DD):");
        try {
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date fecha = formato.parse(fechaStr);
            Artista artista = new Artista();
            artista.setNomArtista(nombre);
            artista.setFechaNacimientoArtista(fecha);

            artistaController.create(artista);
            cargarArtistasEnTabla();
        } catch (DateTimeParseException ex) {
            JOptionPane.showMessageDialog(this, "Formato de fecha inválido.");
        } catch (ParseException ex) {
            Logger.getLogger(MostrarArtistas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CrearArtistaActionPerformed

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        new Seleccion().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_VolverActionPerformed

    private void BorrarArtistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarArtistaActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un artista para borrar.");
            return;
        }

        int id = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
        Artista artistaActualizado = artistaController.findById(id);

        if (artistaActualizado.getDiscoCollection() != null && !artistaActualizado.getDiscoCollection().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "No puedes eliminar este artista porque tiene discos asociados.\n"
                    + "Primero elimina o reasigna los discos a otro artista.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "¿Estás seguro que deseas eliminar este artista?", "Confirmar", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            artistaController.delete(id);
            cargarArtistasEnTabla();
            JOptionPane.showMessageDialog(this, "Artista eliminado correctamente.");
        }

    }//GEN-LAST:event_BorrarArtistaActionPerformed

    private void ActualizarArtistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarArtistaActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un artista para actualizar.");
            return;
        }

        int id = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
        Artista artista = artistaController.findById(id);

        if (artista != null) {
            String nuevoNombre = JOptionPane.showInputDialog(this, "Nuevo nombre:", artista.getNomArtista());
            if (nuevoNombre == null || nuevoNombre.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nombre no puede estar vacío.");
                return;
            }

            String nuevaFechaStr = JOptionPane.showInputDialog(null, "Inserte la nueva fecha (YYYY-MM-DD)");
            try {
                if (nuevaFechaStr == null || nuevaFechaStr.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "La fecha no puede estar vacía.");
                    return;
                }

                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                formato.setLenient(false); // Evita entradas inválidas como "2025-13-32"
                Date fecha = formato.parse(nuevaFechaStr);

                artista.setFechaNacimientoArtista(fecha);
                artistaController.update(artista);
                cargarArtistasEnTabla();
            } catch (DateTimeParseException ex) {
                JOptionPane.showMessageDialog(this, "Formato de fecha inválido.");
            } catch (ParseException ex) {
                Logger.getLogger(MostrarArtistas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_ActualizarArtistaActionPerformed

    private void cargarArtistasEnTabla() {
        List<Artista> artistas = artistaController.findAll();

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"ID", "Nombre", "Fecha_Nacimiento"});

        for (Artista artista : artistas) {
            modelo.addRow(new Object[]{
                artista.getCodArtista(),
                artista.getNomArtista(),
                artista.getFechaNacimientoArtista() != null ? artista.getFechaFormateada() : "No disponible"
            });
        }

        jTable1.setModel(modelo);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarArtistas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarArtista;
    private javax.swing.JButton BorrarArtista;
    private javax.swing.JButton CrearArtista;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel TextoTitulo;
    private javax.swing.JButton Volver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
